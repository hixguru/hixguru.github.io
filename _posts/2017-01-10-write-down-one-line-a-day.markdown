---
layout: "post"
title: "One line a day"
date: "2017-01-10 22:14"
---

## 하루에 한 줄

새해를 맞이하여 시작하는 하루에 한 줄 기록장. 언제까지 할진 나도 몰라 일단 시작

> 인생에서의 성공은 어떤 지위에 올랐느냐가 아니라, 장애물을 극복하며 성공하려고 노력하는 과정에 있다. -보커 T. 워싱턴-

### JAVA
- `main() 메소드`는 사용자가 직접 호출하는 것이 아니라 **JVM(자바 가상 머신)**에 의해 호출된다. 컴파일된 자바 파일을 실행하면 JVM은 main()부터 실행시킨다.

- `static` 으로 선언된  멤버 변수는 프로그램 내에서 단 하나의 메모리만을 차지한다. 동일한 객체의 인스턴스는 하나의 static 변수를 공유한다.(동기화의 문제) 객체를 생성하기 전에 `ClassName.foobar`로 접근할 수 있으며, 객체 생성 이전에 메모리가 생성이된다.(클래스 이름을 언급한 순간) static 메서드 내에서 일반 멤버 변수를 사용할 수 없다.(static 멤버 변수만 사용 가능) 메모리 생성 시점과 같이 생각해보면 이해가 쉽다.

- `컴파일`이란 작성된 프로그램 자체를 기계어로 변경하는 것
  - 바이트 코드: .java 파일을 컴파일 할 때 만들어지는 .class 파일(완전한 기계어는 아니고 중간 단계의 언어)

  - 자바로 프로그램을 작성하고 컴파일을 하면 기계어가 재해석하기 쉬운 중간단계의 언어인 바이트코드(.class)로 변환되고 JVM이 바이트 코드를 기계어로 해석한 후 실행하게 된다.


- Stack 메모리 영역: 프로그램을 실행하는데 필요한 메모리 공간(정적인 개념의 메모리)
  -ex)프로그램을 실행시키면 main()메서드를 실행시키고 해당 함수 안에 있는 sum()을 실행시킨다고 가정한다면, 다음과 같이 쌓일 것이다.

| Stack 메모리영역   | |
| :-------:        | |
|  ...             | |
| sum()            | 하나의 메소드에 필요한 메모리 덩어리를 `스택 프레임`이라고 한다.<br />(메소드를 호출하면 생김) |
| main()           | 지역변수, 매개변수, 리턴값을 위한 공간 <br />(호출이 끝나면 자동으로 이 스택 프레임이 제거된다.)|

- 가비지 콜렉터(GC) : JVM 내에서 더 이상 사용되지 않는 메모리나 불필요한 메모리를 제거, 메모리 조각모음 작업도 한다. JVM에 의해서 자동으로 이루어지기 때문에 메모리가 언제 정리되는지는 알 수 없음
